<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!-- Color Palette -->
    <Color x:Key="BackgroundColor">#020B16</Color>
    <Color x:Key="BackgroundAlternateColor">#0A1622</Color>
    <Color x:Key="BackgroundLighterColor">#0F1C2D</Color>
    <Color x:Key="PrimaryColor">#3E6CB2</Color>
    <Color x:Key="DarkAccentColor">#B41919</Color>
    <Color x:Key="AccentColor">#E22B2B</Color>
    <Color x:Key="WhiteColor">#FFFFFF</Color>
    <Color x:Key="GrayColor">#6E7D8C</Color>
    <Color x:Key="BorderColor">#1A2535</Color>

    <!-- Brush Resources -->
    <SolidColorBrush x:Key="BackgroundBrush" Color="{StaticResource BackgroundColor}" />
    <SolidColorBrush x:Key="BackgroundAlternateBrush" Color="{StaticResource BackgroundAlternateColor}" />
    <SolidColorBrush x:Key="BackgroundLighterBrush" Color="{StaticResource BackgroundLighterColor}" />
    <SolidColorBrush x:Key="PrimaryBrush" Color="{StaticResource PrimaryColor}" />
    <SolidColorBrush x:Key="DarkAccentBrush" Color="{StaticResource DarkAccentColor}" />
    <SolidColorBrush x:Key="AccentBrush" Color="{StaticResource AccentColor}" />
    <SolidColorBrush x:Key="WhiteBrush" Color="{StaticResource WhiteColor}" />
    <SolidColorBrush x:Key="GrayBrush" Color="{StaticResource GrayColor}" />
    <SolidColorBrush x:Key="BorderBrush" Color="{StaticResource BorderColor}" />

    <!-- Shadow Effects -->
    <DropShadowEffect x:Key="SmallShadow" BlurRadius="10" ShadowDepth="1" Direction="270" Color="#000000" Opacity="0.2" />
    <DropShadowEffect x:Key="MediumShadow" BlurRadius="20" ShadowDepth="2" Direction="270" Color="#000000" Opacity="0.3" />
    <DropShadowEffect x:Key="LargeShadow" BlurRadius="30" ShadowDepth="3" Direction="270" Color="#000000" Opacity="0.4" />

    <!-- Common Control Styles -->

    <!-- Base Button Style -->
    <Style x:Key="BaseButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource PrimaryBrush}" />
        <Setter Property="Foreground" Value="{StaticResource WhiteBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="16,8" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            CornerRadius="4">
                        <ContentPresenter HorizontalAlignment="Center" 
                                          VerticalAlignment="Center" 
                                          Margin="{TemplateBinding Padding}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#4A7CC2" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#2A5CA2" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="#263345" />
                            <Setter Property="Foreground" Value="#6E7D8C" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Primary Action Button -->
    <Style x:Key="ActionButtonStyle" TargetType="Button" BasedOn="{StaticResource BaseButtonStyle}">
        <Setter Property="Background" Value="{StaticResource PrimaryBrush}" />
        <Setter Property="Foreground" Value="{StaticResource WhiteBrush}" />
        <Setter Property="Effect" Value="{StaticResource SmallShadow}" />
    </Style>

    <!-- Danger Button -->
    <Style x:Key="DangerButtonStyle" TargetType="Button" BasedOn="{StaticResource BaseButtonStyle}">
        <Setter Property="Background" Value="{StaticResource AccentBrush}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#F23B3B" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#D21B1B" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Secondary Button -->
    <Style x:Key="SecondaryButtonStyle" TargetType="Button" BasedOn="{StaticResource BaseButtonStyle}">
        <Setter Property="Background" Value="#1A2535" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#2A3545" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#0A1525" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- ToggleButton Style for Tabs -->
    <Style x:Key="ModeToggleButtonStyle" TargetType="ToggleButton">
        <Setter Property="Background" Value="#0F1C2D" />
        <Setter Property="Foreground" Value="{StaticResource WhiteBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            CornerRadius="4">
                        <ContentPresenter HorizontalAlignment="Center" 
                                          VerticalAlignment="Center" 
                                          Margin="{TemplateBinding Padding}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="{StaticResource PrimaryBrush}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#2A3545" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Title Bar Button Style -->
    <Style x:Key="TitleBarButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter HorizontalAlignment="Center" 
                                          VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#2A3545" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#1A2535" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Close Button Style -->
    <Style x:Key="CloseButtonStyle" TargetType="Button" BasedOn="{StaticResource TitleBarButtonStyle}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource AccentBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Nav Button Style -->
    <Style x:Key="NavButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource WhiteBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Height" Value="50" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="Padding" Value="20,0,0,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Rectangle x:Name="Indicator" Width="4" Height="30" Fill="{StaticResource PrimaryBrush}" 
                                   HorizontalAlignment="Left" VerticalAlignment="Center" Visibility="Collapsed" />
                        <Border Background="{TemplateBinding Background}"
                                CornerRadius="0,4,4,0">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              VerticalAlignment="Center" 
                                              Margin="{TemplateBinding Padding}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#1A2535" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#0A1525" />
                        </Trigger>
                        <DataTrigger Binding="{Binding IsSelected}" Value="True">
                            <Setter TargetName="Indicator" Property="Visibility" Value="Visible" />
                            <Setter Property="Background" Value="#1A2535" />
                            <Setter Property="FontWeight" Value="SemiBold" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Card Style for Panel Content -->
    <Style x:Key="CardStyle" TargetType="Border">
        <Setter Property="Background" Value="{StaticResource BackgroundAlternateBrush}" />
        <Setter Property="CornerRadius" Value="8" />
        <Setter Property="Padding" Value="20" />
        <Setter Property="Margin" Value="0,0,0,20" />
        <Setter Property="Effect" Value="{StaticResource SmallShadow}" />
    </Style>

    <!-- DataGrid Styles -->
    <Style x:Key="ModernDataGridStyle" TargetType="DataGrid">
        <Setter Property="Background" Value="{StaticResource BackgroundAlternateBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="RowBackground" Value="{StaticResource BackgroundLighterBrush}" />
        <Setter Property="AlternatingRowBackground" Value="{StaticResource BackgroundAlternateBrush}" />
        <Setter Property="GridLinesVisibility" Value="None" />
        <Setter Property="RowHeight" Value="40" />
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="AutoGenerateColumns" Value="False" />
        <Setter Property="HeadersVisibility" Value="Column" />
        <Setter Property="CanUserResizeRows" Value="False" />
        <Setter Property="SelectionMode" Value="Single" />
        <Setter Property="SelectionUnit" Value="FullRow" />
        <Setter Property="HorizontalGridLinesBrush" Value="Transparent" />
        <Setter Property="VerticalGridLinesBrush" Value="Transparent" />
    </Style>

    <Style TargetType="DataGridColumnHeader">
        <Setter Property="Background" Value="{StaticResource PrimaryBrush}" />
        <Setter Property="Foreground" Value="{StaticResource WhiteBrush}" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Height" Value="40" />
        <Setter Property="Padding" Value="10,0" />
        <Setter Property="BorderThickness" Value="0" />
    </Style>

    <Style TargetType="DataGridRow">
        <Setter Property="Foreground" Value="{StaticResource WhiteBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="#2A3545" />
                <Setter Property="BorderThickness" Value="0" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#1A2535" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="DataGridCell">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="10,0" />
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderThickness" Value="0" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- TextBox Styles -->
    <Style x:Key="ModernTextBoxStyle" TargetType="TextBox">
        <Setter Property="Background" Value="{StaticResource BackgroundLighterBrush}" />
        <Setter Property="Foreground" Value="{StaticResource WhiteBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="10,8" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            CornerRadius="4">
                        <ScrollViewer x:Name="PART_ContentHost" 
                                      Focusable="False" 
                                      HorizontalScrollBarVisibility="Hidden" 
                                      VerticalScrollBarVisibility="Hidden"
                                      Margin="{TemplateBinding Padding}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource GrayBrush}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource PrimaryBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ComboBox Styles -->
    <Style x:Key="ModernComboBoxStyle" TargetType="ComboBox">
        <Setter Property="Background" Value="{StaticResource BackgroundLighterBrush}" />
        <Setter Property="Foreground" Value="{StaticResource WhiteBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="10,8" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton x:Name="ToggleButton" 
                                      Background="{TemplateBinding Background}"
                                      BorderBrush="{TemplateBinding BorderBrush}"
                                      BorderThickness="{TemplateBinding BorderThickness}"
                                      Padding="{TemplateBinding Padding}"
                                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                            <ToggleButton.Template>
                                <ControlTemplate TargetType="ToggleButton">
                                    <Border Background="{TemplateBinding Background}" 
                                            BorderBrush="{TemplateBinding BorderBrush}" 
                                            BorderThickness="{TemplateBinding BorderThickness}" 
                                            CornerRadius="4">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="20" />
                                            </Grid.ColumnDefinitions>
                                            <ContentPresenter Grid.Column="0" 
                                                              HorizontalAlignment="Left" 
                                                              Margin="{TemplateBinding Padding}" 
                                                              VerticalAlignment="Center" />
                                            <Path Grid.Column="1" 
                                                  Data="M0,0 L5,5 L10,0" 
                                                  Fill="{StaticResource GrayBrush}" 
                                                  HorizontalAlignment="Center" 
                                                  VerticalAlignment="Center" 
                                                  Stretch="Uniform" 
                                                  Width="10" 
                                                  Height="5" />
                                        </Grid>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="BorderBrush" Value="{StaticResource GrayBrush}" />
                                        </Trigger>
                                        <Trigger Property="IsChecked" Value="True">
                                            <Setter Property="BorderBrush" Value="{StaticResource PrimaryBrush}" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </ToggleButton.Template>
                        </ToggleButton>
                        <ContentPresenter x:Name="ContentPresenter" 
                                          Content="{TemplateBinding SelectionBoxItem}" 
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" 
                                          Margin="{TemplateBinding Padding}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                        <Popup x:Name="PART_Popup" 
                               AllowsTransparency="True" 
                               PopupAnimation="Slide" 
                               Placement="Bottom" 
                               IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" 
                               Focusable="False">
                            <Border Background="{StaticResource BackgroundLighterBrush}" 
                                    BorderBrush="{StaticResource BorderBrush}" 
                                    BorderThickness="1" 
                                    CornerRadius="4" 
                                    Margin="0,5,0,0">
                                <ScrollViewer MaxHeight="{TemplateBinding MaxDropDownHeight}" 
                                              VerticalScrollBarVisibility="Auto" 
                                              HorizontalScrollBarVisibility="Disabled">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ComboBoxItem">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource WhiteBrush}" />
        <Setter Property="Padding" Value="10,8" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Border Background="{TemplateBinding Background}" 
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#2A3545" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{StaticResource PrimaryBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- DatePicker Style -->
    <Style x:Key="ModernDatePickerStyle" TargetType="DatePicker">
        <Setter Property="Background" Value="{StaticResource BackgroundLighterBrush}" />
        <Setter Property="Foreground" Value="{StaticResource WhiteBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Height" Value="36" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>

    <!-- Value Converters -->
    <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter" />

    <Style x:Key="EditableFieldStyle" TargetType="TextBox">
        <Setter Property="Background" Value="White"/>
        <Setter Property="Foreground" Value="#333333"/>
        <Setter Property="BorderBrush" Value="#DDDDDD"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="5,3"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Height" Value="28"/>
    </Style>

    <!-- Multiline Editable Field Style -->
    <Style x:Key="MultilineEditableFieldStyle" TargetType="TextBox">
        <Setter Property="Background" Value="White"/>
        <Setter Property="Foreground" Value="#333333"/>
        <Setter Property="BorderBrush" Value="#DDDDDD"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="5,3"/>
        <Setter Property="MinHeight" Value="80"/>
        <Setter Property="AcceptsReturn" Value="True"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
    </Style>

    <!-- Editable Date Style -->
    <Style x:Key="EditableDateStyle" TargetType="DatePicker">
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="#DDDDDD"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Height" Value="28"/>
    </Style>

    <!-- Client ComboBox Style -->
    <Style x:Key="ClientComboBoxStyle" TargetType="ComboBox">
        <Setter Property="Background" Value="White"/>
        <Setter Property="Foreground" Value="#333333"/>
        <Setter Property="BorderBrush" Value="#DDDDDD"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Height" Value="28"/>
    </Style>

    <!-- VAT Rate ComboBox Style -->
    <Style x:Key="VatRateComboBoxStyle" TargetType="ComboBox">
        <Setter Property="Background" Value="White"/>
        <Setter Property="Foreground" Value="#333333"/>
        <Setter Property="BorderBrush" Value="#DDDDDD"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Height" Value="26"/>
        <Setter Property="Width" Value="70"/>
    </Style>

    <!-- Payment Method ComboBox Style -->
    <Style x:Key="PaymentMethodComboStyle" TargetType="ComboBox">
        <Setter Property="Background" Value="White"/>
        <Setter Property="Foreground" Value="#333333"/>
        <Setter Property="BorderBrush" Value="#DDDDDD"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Height" Value="28"/>
        <Setter Property="Width" Value="150"/>
    </Style>

    <!-- Remove Button Style -->
    <Style x:Key="RemoveButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="#E22B2B"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Width" Value="24"/>
        <Setter Property="Height" Value="24"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter HorizontalAlignment="Center" 
                                          VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#FFF0F0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Add Item Button Style -->
    <Style x:Key="AddItemButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="#3E6CB2"/>
        <Setter Property="BorderBrush" Value="#DDDDDD"/>
        <Setter Property="BorderThickness" Value="0,1,0,0"/>
        <Setter Property="Padding" Value="10,8"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter HorizontalAlignment="Center" 
                                          VerticalAlignment="Center" 
                                          Margin="{TemplateBinding Padding}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#F5F9FF"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>